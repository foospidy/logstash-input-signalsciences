# Example configuration file for the Signal Sciences input plugin.
#
# Thie example configuration uses the Signal Sciences input plugin to
# pull data from the Signal Sciences API requests feed endpoint and 
# inserts it into Elasticsearch using the Elasticsearch output plugin.
input {
	signalsciences {
		# Signal Sciences API account username.
		email => "demo@signalsciences.com"
		# Signal Sciences API password. If password has quotes, remmber to enable 
		# config.support_escapes: true in the logstash.yml file
		# Refer to https://www.elastic.co/guide/en/logstash/master/configuration-file-structure.html
		password => "demo123"
		# Signal Sciences API access token.
		# The use of the API access token will override password if token value is set
		token => "abcedefg-abcd-efgh-ijkl-abc1abc2abc3"
		# Corp and site to pull data from.
		corp => "sigsci-demo"
		site => "signalsciences.com"
		# Number of seconds in the past to filter data on
		# This value will also be used to set the interval at which the API is polled.
		# min value 300 (5 mins), max value 86400 (24 hrs).
		# Example setting, if you want to pull the latest hour of data every our, set
		# the value to 3600 (1 hr).
		from => 300
		# If alternate API paths want to be input, one can create a hash as follows
		# if the API has a requirement around from/until query parameters set 
		# from_until to true
		# paths default to "feed_requests"=>{"path"=>"feed/requests", "from_until"=>"true"}.
		endpoints => {
			agents => {
				endpoint => "agents"
				from_until => false
				opt_site => "prod.signalsciences.com"
			}
			feed_requests => {
				endpoint => "feed/requests"
				from_until => true
				opt_site => "qa.signalsciences.com"
			}
		}
	}
}
filter{
	#You need to set the float values to float to prevent them from being templated as integers 
	json {
		source => "message"
	}
	mutate {
		convert => {
			"agent.latency_time_50th" => "float"
			"agent.latency_time_95th" => "float"
			"agent.latency_time_99th" => "float"
			"host.cpu" => "float"
		}
		rename => ["host", "host.name"]
	}
}
output {
	elasticsearch {
		hosts => ["localhost:9200"]
		index => "signalsciences"
		# To avoid duplicate records in Elastichsearch,
		# set document id to the Signal Sciences request id.
		document_id => "%{[message][id]}"
	}
}
